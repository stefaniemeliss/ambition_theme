# ambition colours
navy    = "#474C68"
cyan    = "#14B4E9"
coral   = "#E94B58"
teal    = "#00987C"
purple  = "#6D2160"
orange  = "#EC642D"
yellow  = "#FFCC00"
blue    = "#006FB7"
red     = "#BF1C1D"
white   = "#FFFFFF"
black   = "#000000"
# function to create colour tints
# source: https://rdrr.io/cran/MESS/src/R/colorfunctions.R
col.tint <- function(col, tint=.4) {
if(missing(col))
stop("a vector of colours is missing")
if (tint<0 | tint>1)
stop("shade must be between 0 and 1")
mat <- t(col2rgb(col, alpha=TRUE)  +  c(rep(1-tint, 3), 0)*(255-col2rgb(col, alpha=TRUE)))
rgb(mat, alpha=mat[,4], maxColorValue=255)
}
# generate tints #
# navy
navy40 <- col.tint(navy, tint = .4)
navy30 <- col.tint(navy, tint = .3)
navy20 <- col.tint(navy, tint = .2)
navy10 <- col.tint(navy, tint = .1)
palette_navy <- c(navy, navy40, navy30, navy20, navy10)
# black
black40 <- col.tint(black, tint = .4)
black30 <- col.tint(black, tint = .3)
black20 <- col.tint(black, tint = .2)
black10 <- col.tint(black, tint = .1)
palette_black <- c(black, black40, black30, black20, black10)
# load libraries
library(ggplot2)
library(extrafont)
# if not run before, run
# font_import()
# define font sizesfor normal text and headings in pt
font_size = 12
head_size = 18
# define theme for plot
ambition_theme <- theme_bw(base_family = "Segoe UI") +
theme(
#text=element_text(family="Segoe UI"),
plot.title = element_text(size = head_size, face="bold"),
axis.title = element_text(size = font_size, face="bold"),
axis.text = element_text(size = font_size),
legend.title = element_text(size = font_size, face="bold"),
legend.text = element_text(size = font_size),
strip.background = element_rect(fill = black20),
strip.text = element_text(size = font_size),
plot.caption = element_text(size = font_size),
legend.position = "bottom"
)
?theme_bw
theme_bw()
View(ambition_theme)
# define theme for plot
ambition_theme <- theme_bw() +
theme(
# typography settings
text = element_text(family = "Segoe UI", size = font_size),
title = element_text(family = "Segoe UI", face = "bold"),
plot.title = element_text(size = head_size),
# facet background
strip.background = element_rect(fill = black20),
# not mandatory: legend position
legend.position = "bottom"
)
# define theme for plot
ambition_theme <- theme_bw() +
theme(
# typography settings
text = element_text(family = "Segoe UI", size = font_size),
title = element_text(family = "Segoe UI", face = "bold"),
plot.title = element_text(size = head_size),
# facet background
strip.background = element_rect(fill = black20),
# not mandatory: legend position
legend.position = "bottom"
)
View(ambition_theme)
ambition_theme <- theme_bw(base_family = "Segoe UI") +
theme(
#text=element_text(family="Segoe UI"),
plot.title = element_text(size = head_size, face="bold"),
axis.title = element_text(size = font_size, face="bold"),
axis.text = element_text(size = font_size),
legend.title = element_text(size = font_size, face="bold"),
legend.text = element_text(size = font_size),
strip.background = element_rect(fill = black20),
strip.text = element_text(size = font_size),
plot.caption = element_text(size = font_size),
legend.position = "bottom"
)
View(ambition_theme)
rm(ambition_theme)
ambition_theme <- theme_bw(base_family = "Segoe UI") +
theme(
#text=element_text(family="Segoe UI"),
plot.title = element_text(size = head_size, face="bold"),
axis.title = element_text(size = font_size, face="bold"),
axis.text = element_text(size = font_size),
legend.title = element_text(size = font_size, face="bold"),
legend.text = element_text(size = font_size),
strip.background = element_rect(fill = black20),
strip.text = element_text(size = font_size),
plot.caption = element_text(size = font_size),
legend.position = "bottom"
)
View(ambition_theme)
theme_bw
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
# simulate data
set.seed(20052024) # date of meeting
n = 100
# simulate data
dat <- faux::rnorm_multi(n = n,
mu = c(6, 6, 7, 10),
sd = c(1, 1, 1, 1),
r = c(0, 0, 0, 0, .7, 0),
varnames = c("T1_g1", "T1_g2", "T2_g1", "T2_g2"),
empirical = FALSE)
# format data: wide data
df <- data.frame(id = 1:n,
Group = c(rep("Control group", n), rep("Experimental group", n)),
T1 = c(dat$T1_g1, dat$T1_g2),
T2 = c(dat$T2_g1, dat$T2_g2))
# format data: long data
df_long <- reshape2::melt(df, id.vars = c("id", "Group"), variable.name = "timepoint")
# simulate data
dat <- data.frame(Value = rnorm(n = 1000),
Group = c("A", "B"))
# create plot
ggplot(data =  dat, aes(x = Value)) +
geom_histogram() +
ambition_theme +
labs(title = "A basic histogram", subtitle = "(simulated data)")
# define theme for plot
ambition_theme <- theme_bw(base_family = "Segoe UI") +
theme(
text = element_text(family = "Segoe UI", size = font_size),
title = element_text(face = "bold", size = font_size),
plot.title = element_text(size = head_size, face = "bold"),
plot.subtitle = element_text(size = font_size),
axis.title = element_text(size = font_size, face = "bold"),
axis.text = element_text(size = font_size),
legend.title = element_text(size = font_size, face = "bold"),
legend.text = element_text(size = font_size),
strip.background = element_rect(fill = black20),
strip.text = element_text(size = font_size),
plot.caption = element_text(size = font_size),
legend.position = "bottom"
)
# simulate data
dat <- data.frame(Value = rnorm(n = 1000),
Group = c("A", "B"))
# create plot
ggplot(data =  dat, aes(x = Value)) +
geom_histogram() +
ambition_theme +
labs(title = "A basic histogram", subtitle = "(simulated data)")
# define theme for plot
ambition_theme <- theme_bw(base_family = "Segoe UI") +
theme(
text = element_text(family = "Segoe UI", size = font_size),
title = element_text(face = "bold", size = font_size),
plot.title = element_text(size = font_size, face = "bold"),
plot.subtitle = element_text(size = font_size, face = "plain"),
axis.title = element_text(size = font_size, face = "bold"),
axis.text = element_text(size = font_size),
legend.title = element_text(size = font_size, face = "bold"),
legend.text = element_text(size = font_size),
strip.background = element_rect(fill = black20),
strip.text = element_text(size = font_size),
plot.caption = element_text(size = font_size),
legend.position = "bottom"
)
# simulate data
dat <- data.frame(Value = rnorm(n = 1000),
Group = c("A", "B"))
# create plot
ggplot(data =  dat, aes(x = Value)) +
geom_histogram() +
ambition_theme +
labs(title = "A basic histogram", subtitle = "(simulated data)")
# simulate data
dat <- data.frame(Value = rnorm(n = 1000),
Group = c("A", "B"))
# create plot
ggplot(data =  dat, aes(x = Value)) +
geom_histogram() +
ambition_theme +
labs(title = "A basic histogram", subtitle = "(simulated data)") +
ylab("Count")
# grouped scatterplot
ggplot(data = df, aes(x = T1, y = T2, col = Group)) +
geom_point(shape = 20)+
scale_color_manual(values = c(navy, blue)) +
facet_wrap(. ~ Group, nrow = 2) +
ambition_theme +
theme(legend.position = "none") +
xlab("Baseline assessment") + ylab("Outcome assessment")
# histogram
ggplot(data =  dat, aes(x = Value)) +
geom_histogram(fill = coral) +
ambition_theme +
labs(title = "A basic histogram", subtitle = "(simulated data)") +
ylab("Count")
# grouped scatterplot
ggplot(data = df, aes(x = T1, y = T2, col = Group)) +
geom_point(shape = 20)+
scale_color_manual(values = c(navy, purple)) +
facet_wrap(. ~ Group, nrow = 2) +
ambition_theme +
theme(legend.position = "none") +
xlab("Baseline assessment") + ylab("Outcome assessment")
# histogram
ggplot(data =  dat, aes(x = Value)) +
geom_histogram(fill = coral) +
ambition_theme +
labs(title = "A basic histogram", subtitle = "(simulated data)") +
ylab("Count")
# grouped scatterplot
ggplot(data = df, aes(x = T1, y = T2, col = Group)) +
geom_point(shape = 20)+
scale_color_manual(values = c(navy, purple)) +
facet_wrap(. ~ Group, nrow = 2) +
ambition_theme +
theme(legend.position = "none") +
xlab("Baseline assessment") + ylab("Outcome assessment")
col.tint(black, .3)
remotes::install_github("poissonconsulting/tinter")
tinter::tinter(black)
tinter::tinter(black, direction = "tints")
tinter::tinter(black, direction = "tints", steps = 9)
tinter::tinter(black, direction = "tints", steps = 11)
grDevices::colorRampPalette(colors = c("white", "black"))
grDevices::colorRampPalette(colors = c("white", "black"))(10)
grDevices::colorRampPalette(colors = c("white", "black"))(11)
grey10
"grey10"
"grey20"
"grey50"
grDevices::colorRampPalette(colors = c("white", "black"))(11)[2:5]
navy
